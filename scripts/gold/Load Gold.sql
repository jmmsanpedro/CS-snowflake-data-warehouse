USE DATABASE SALES;
USE SCHEMA GOLD;
USE ROLE SYSADMIN;

-- Load DIM_STORE
INSERT INTO
    GOLD.DIM_STORE 
SELECT
    IDENTITY,
    STOREID AS STOREID,
    STORENAME AS STORE_NAME,
    STORELOC AS STORE_LOCATION,
    GETDATE()
FROM
    SILVER.ERP_STORES;


-- Load DIM_CUSTOMER
-- WITH NEW_CUSTOMER AS(
--     SELECT
--         CI.CST_ID,
--         CI.CST_KEY, -- CRM is the master so CRM_CUST_INFO.CST_KEY trumps ERP_CUST_AZ12.CID
--         CI.CST_FIRSTNAME,
--         CI.CST_LASTNAME,
--         CA.BDATE,
--         CI.CST_MARITAL_STATUS,
--         CASE
--             WHEN CI.CST_GNDR != 'N/A' THEN CI.CST_GNDR
--             ELSE COALESCE(CA.GEN, 'N/A')
--         END AS CST_GNDR_derived,
--         CI.CST_CREATE_DATE,
--         CI.CST_LOYALTY_JOIN_DATE,
--         DS.STORE_KEY,
--         DWH_STATUS,
--         DWH_START_DATE,
--         DWH_END_DATE,
--         GETDATE() AS DWH_CREATE_DATE
--     FROM
--         SILVER.CRM_CUST_INFO CI
--         LEFT JOIN SILVER.ERP_CUST_AZ12 CA
--         ON CI.CST_KEY = RIGHT(CA.CID,LEN(CA.CID)-4)
--         LEFT JOIN GOLD.DIM_STORE DS
--         ON CI.CST_PREF_STORE = DS.STORE_KEY
-- )
create procedure gold.testscd2(
begin
    CREATE OR REPLACE temp TABLE ChangedRows
    (
        Customer_ID     INT,
        Customer_Name   STRING,
        Customer_City   STRING,
        Customer_Type   STRING,
        ActionType      STRING
    )
end;

MERGE INTO GOLD.DIM_CUSTOMER AS TGT
USING (
    SELECT
        CI.CST_ID,
        CI.CST_KEY, -- CRM is the master so CRM_CUST_INFO.CST_KEY trumps ERP_CUST_AZ12.CID
        CI.CST_FIRSTNAME,
        CI.CST_LASTNAME,
        CA.BDATE,
        CI.CST_MARITAL_STATUS,
        CASE
            WHEN CI.CST_GNDR != 'N/A' THEN CI.CST_GNDR
            ELSE COALESCE(CA.GEN, 'N/A')
        END AS CST_GNDR_derived,
        CI.CST_CREATE_DATE,
        CI.CST_LOYALTY_JOIN_DATE,
        DS.STORE_KEY,
        'Current' AS DWH_STATUS,
        CAST(GETDATE() AS DATE) AS DWH_START_DATE,
        '9999-12-31' AS DWH_END_DATE,
        GETDATE() AS DWH_CREATE_DATE
    FROM
        SILVER.CRM_CUST_INFO CI
        LEFT JOIN SILVER.ERP_CUST_AZ12 CA
        ON CI.CST_KEY = RIGHT(CA.CID,LEN(CA.CID)-4)
        LEFT JOIN GOLD.DIM_STORE DS
        ON CI.CST_PREF_STORE = DS.STORE_KEY
) AS SRC
    ON TGT.CUSTOMER_ID = SRC.CST_ID
    AND TGT.DWH_STATUS = SRC.DWH_STATUS

WHEN MATCHED AND (
    TGT.CUSTOMER_NUMBER <> SRC.CST_KEY
    OR TGT.FIRST_NAME <> SRC.CST_FIRSTNAME
    OR TGT.LAST_NAME <> SRC.CST_LASTNAME
    OR TGT.BIRTH_DATE <> SRC.BDATE
    OR TGT.MARITAL_STATUS <> SRC.CST_MARITAL_STATUS
    OR TGT.GENDER <> SRC.CST_GNDR_derived
    OR TGT.CREATE_DATE <> SRC.CST_CREATE_DATE
    OR TGT.LOYALTY_JOIN_DATE <> SRC.CST_LOYALTY_JOIN_DATE
    OR TGT.STORE_KEY <> SRC.STORE_KEY
)

THEN 

UPDATE SET
    TGT.DWH_STATUS = 'Expired',
    TGT.DWH_END_DATE = GETDATE() -- VARIABLE TO LOAD DATE

RETURN
    $ACTION AS ActionType,
    src.CST_ID,
    src.MARITAL_STATUS
INTO gold.ChangedRows
    
WHEN NOT MATCHED
THEN
    INSERT (CUSTOMER_ID, CUSTOMER_NUMBER, FIRST_NAME, LAST_NAME, BIRTH_DATE, MARITAL_STATUS, GENDER, CREATE_DATE, LOYALTY_JOIN_DATE, STORE_KEY, DWH_STATUS, DWH_START_DATE,    DWH_END_DATE, DWH_CREATE_DATE)
    VALUES (SRC.CST_ID, SRC.CST_KEY,SRC.CST_FIRSTNAME,SRC.CST_LASTNAME,SRC.BDATE,SRC.CST_MARITAL_STATUS,SRC.CST_GNDR_derived,SRC.CST_CREATE_DATE,SRC.CST_LOYALTY_JOIN_DATE, SRC.STORE_KEY, SRC.DWH_STATUS, SRC.DWH_START_DATE,SRC.DWH_END_DATE,SRC.DWH_CREATE_DATE
    )

)
;


SELECT * FROM TABLE(RESULT_SCAN('01bdf181-0001-8004-0001-a4c6000d934a'));

    SELECT CUSTOMER_KEY, CUSTOMER_ID, MARITAL_STATUS, DWH_STATUS, DWH_START_DATE, DWH_END_DATE FROM GOLD.DIM_CUSTOMER
    WHERE CUSTOMER_ID = '11000';
    
    UPDATE GOLD.DIM_CUSTOMER 
    SET MARITAL_STATUS = 'Married', DWH_END_DATE = '9999-12-31', DWH_STATUS = 'Current'
    WHERE CUSTOMER_ID = '11000';

    UPDATE GOLD.DIM_CUSTOMER 
    SET MARITAL_STATUS = 'TEST'
    WHERE CUSTOMER_ID = '11000';
