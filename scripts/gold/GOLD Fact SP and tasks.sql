USE DATABASE SALES;
USE SCHEMA GOLD;
USE ROLE ACCOUNTADMIN;


CREATE OR REPLACE PROCEDURE GOLD.SP_LOAD_FACT_SALES()
RETURNS STRING
LANGUAGE SQL
AS
BEGIN
INSERT INTO GOLD.FACT_SALES
    (
    	ORDER_DATE_KEY,
    	CUSTOMER_KEY,
    	PRODUCT_KEY,
    	STORE_KEY,
    	SHIP_DATE_KEY,
    	DUE_DATE_KEY,
    	ORDER_NUMBER,
    	SALES,
    	QUANTITY,
    	PRICE,
    	POINTS_RECEIVED,
    	PAYMENT_CHANNEL,
    	DWH_CREATE_DATE
    )
SELECT 
    DDT.DATE_KEY AS ORDER_DATE_KEY,
    DCS.CUSTOMER_KEY AS CUSTOMER_KEY,
    DPR.PRODUCT_KEY AS PRODUCT_KEY,
    DST.STORE_KEY AS STORE_KEY,
    DDS.DATE_KEY AS SHIP_DATE_KEY,
	DDD.DATE_KEY AS DUE_DATE_KEY,
    SLS.SLS_ORD_NUM AS ORDER_NUMBER,
	SLS.SLS_SALES AS SALES,
	SLS.SLS_QUANTITY AS QUANTITY,
	SLS.SLS_PRICE AS PRICE,
	SLS.SLS_PTS_RCVD AS POINTS_RECEIVED,
	SLS.SLS_PYMNT_CHNNL AS PAYMENT_CHANNEL,
	SLS.DWH_CREATE_DATE AS DWH_CREATE_DATE
FROM 
    SALES.SILVER.CRM_SALES_DETAILS SLS
    LEFT JOIN GOLD.DIM_STORE DST
    ON SLS.SLS_STORE_ID = DST.STORE_ID
    LEFT JOIN GOLD.DIM_CUSTOMER DCS
    ON SLS.SLS_CUST_ID = DCS.CUSTOMER_ID
    LEFT JOIN GOLD.DIM_PRODUCT DPR
    ON SLS.SLS_PRD_KEY = DPR.PRODUCT_NUMBER
    LEFT JOIN GOLD.DIM_DATE DDT
    ON SLS.SLS_ORDER_DT = DDT.DATE
    LEFT JOIN GOLD.DIM_DATE DDS
    ON SLS.SLS_SHIP_DT = DDT.DATE
    LEFT JOIN GOLD.DIM_DATE DDD
    ON SLS.SLS_DUE_DT = DDT.DATE
WHERE
    DCS.DWH_STATUS = 'Current'
    AND DPR.DWH_STATUS = 'Current';
    
     RETURN 'Inserted Fact table records';
 END;

--==--

CREATE
OR REPLACE TASK GOLD.TASK_LOAD_FACT_SALES WAREHOUSE = COMPUTE_WH SCHEDULE = '1 minute' AS 

CALL GOLD.SP_LOAD_FACT_SALES();

----
USE ROLE SYSADMIN;
EXECUTE SALES.GOLD.TASK_LOAD_DIM_STORE;
CALL GOLD.SP_LOAD_FACT_SALES();
SELECT * FROM GOLD.FACT_SALES;

GRANT OWNERSHIP ON TASK SALES.GOLD.TASK_LOAD_DIM_STORE TO ROLE SYSADMIN;
GRANT OWNERSHIP ON PROCEDURE SALES.GOLD.SP_LOAD_FACT_SALES() TO ROLE ACCOUNTADMIN;
